// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class GrantedAccess extends ethereum.Event {
  get params(): GrantedAccess__Params {
    return new GrantedAccess__Params(this);
  }
}

export class GrantedAccess__Params {
  _event: GrantedAccess;

  constructor(event: GrantedAccess) {
    this._event = event;
  }

  get requestor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get idx(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class NewMedicalRecord extends ethereum.Event {
  get params(): NewMedicalRecord__Params {
    return new NewMedicalRecord__Params(this);
  }
}

export class NewMedicalRecord__Params {
  _event: NewMedicalRecord;

  constructor(event: NewMedicalRecord) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get idx(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RequestedAccess extends ethereum.Event {
  get params(): RequestedAccess__Params {
    return new RequestedAccess__Params(this);
  }
}

export class RequestedAccess__Params {
  _event: RequestedAccess;

  constructor(event: RequestedAccess) {
    this._event = event;
  }

  get requestor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get idx(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RevokedAccess extends ethereum.Event {
  get params(): RevokedAccess__Params {
    return new RevokedAccess__Params(this);
  }
}

export class RevokedAccess__Params {
  _event: RevokedAccess;

  constructor(event: RevokedAccess) {
    this._event = event;
  }

  get requestor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get idx(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OrangeLife__getMedicalRecordsResultRecordsStruct extends ethereum.Tuple {
  get docCID(): string {
    return this[0].toString();
  }

  get verifyingKey(): string {
    return this[1].toString();
  }

  get publicKey(): string {
    return this[2].toString();
  }

  get nonce(): BigInt {
    return this[3].toBigInt();
  }

  get hasAccess(): Array<Address> {
    return this[4].toAddressArray();
  }

  get accessRequested(): Array<Address> {
    return this[5].toAddressArray();
  }
}

export class OrangeLife__getMedicalRecordResultRecordStruct extends ethereum.Tuple {
  get docCID(): string {
    return this[0].toString();
  }

  get verifyingKey(): string {
    return this[1].toString();
  }

  get publicKey(): string {
    return this[2].toString();
  }

  get nonce(): BigInt {
    return this[3].toBigInt();
  }

  get hasAccess(): Array<Address> {
    return this[4].toAddressArray();
  }

  get accessRequested(): Array<Address> {
    return this[5].toAddressArray();
  }
}

export class OrangeLife extends ethereum.SmartContract {
  static bind(address: Address): OrangeLife {
    return new OrangeLife("OrangeLife", address);
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  trustedForwarder(): Address {
    let result = super.call(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_trustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMedicalRecords(
    sender: Address
  ): Array<OrangeLife__getMedicalRecordsResultRecordsStruct> {
    let result = super.call(
      "getMedicalRecords",
      "getMedicalRecords(address):((string,string,string,uint32,address[],address[])[])",
      [ethereum.Value.fromAddress(sender)]
    );

    return result[0].toTupleArray<
      OrangeLife__getMedicalRecordsResultRecordsStruct
    >();
  }

  try_getMedicalRecords(
    sender: Address
  ): ethereum.CallResult<
    Array<OrangeLife__getMedicalRecordsResultRecordsStruct>
  > {
    let result = super.tryCall(
      "getMedicalRecords",
      "getMedicalRecords(address):((string,string,string,uint32,address[],address[])[])",
      [ethereum.Value.fromAddress(sender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<OrangeLife__getMedicalRecordsResultRecordsStruct>()
    );
  }

  getMedicalRecord(
    sender: Address,
    idx: BigInt
  ): OrangeLife__getMedicalRecordResultRecordStruct {
    let result = super.call(
      "getMedicalRecord",
      "getMedicalRecord(address,uint256):((string,string,string,uint32,address[],address[]))",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromUnsignedBigInt(idx)
      ]
    );

    return result[0].toTuple() as OrangeLife__getMedicalRecordResultRecordStruct;
  }

  try_getMedicalRecord(
    sender: Address,
    idx: BigInt
  ): ethereum.CallResult<OrangeLife__getMedicalRecordResultRecordStruct> {
    let result = super.tryCall(
      "getMedicalRecord",
      "getMedicalRecord(address,uint256):((string,string,string,uint32,address[],address[]))",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromUnsignedBigInt(idx)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as OrangeLife__getMedicalRecordResultRecordStruct
    );
  }

  versionRecipient(): string {
    let result = super.call(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );

    return result[0].toString();
  }

  try_versionRecipient(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _trustedForwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetTrustedForwarderCall extends ethereum.Call {
  get inputs(): SetTrustedForwarderCall__Inputs {
    return new SetTrustedForwarderCall__Inputs(this);
  }

  get outputs(): SetTrustedForwarderCall__Outputs {
    return new SetTrustedForwarderCall__Outputs(this);
  }
}

export class SetTrustedForwarderCall__Inputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }

  get _trustedForwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTrustedForwarderCall__Outputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }
}

export class AddMedicalRecordCall extends ethereum.Call {
  get inputs(): AddMedicalRecordCall__Inputs {
    return new AddMedicalRecordCall__Inputs(this);
  }

  get outputs(): AddMedicalRecordCall__Outputs {
    return new AddMedicalRecordCall__Outputs(this);
  }
}

export class AddMedicalRecordCall__Inputs {
  _call: AddMedicalRecordCall;

  constructor(call: AddMedicalRecordCall) {
    this._call = call;
  }

  get docCID(): string {
    return this._call.inputValues[0].value.toString();
  }

  get verifyingKey(): string {
    return this._call.inputValues[1].value.toString();
  }

  get publicKey(): string {
    return this._call.inputValues[2].value.toString();
  }

  get nonce(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddMedicalRecordCall__Outputs {
  _call: AddMedicalRecordCall;

  constructor(call: AddMedicalRecordCall) {
    this._call = call;
  }
}

export class RequestAccessCall extends ethereum.Call {
  get inputs(): RequestAccessCall__Inputs {
    return new RequestAccessCall__Inputs(this);
  }

  get outputs(): RequestAccessCall__Outputs {
    return new RequestAccessCall__Outputs(this);
  }
}

export class RequestAccessCall__Inputs {
  _call: RequestAccessCall;

  constructor(call: RequestAccessCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get idx(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RequestAccessCall__Outputs {
  _call: RequestAccessCall;

  constructor(call: RequestAccessCall) {
    this._call = call;
  }
}

export class GrantAccessCall extends ethereum.Call {
  get inputs(): GrantAccessCall__Inputs {
    return new GrantAccessCall__Inputs(this);
  }

  get outputs(): GrantAccessCall__Outputs {
    return new GrantAccessCall__Outputs(this);
  }
}

export class GrantAccessCall__Inputs {
  _call: GrantAccessCall;

  constructor(call: GrantAccessCall) {
    this._call = call;
  }

  get addrToGrant(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get idx(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class GrantAccessCall__Outputs {
  _call: GrantAccessCall;

  constructor(call: GrantAccessCall) {
    this._call = call;
  }
}

export class RevokeAccessCall extends ethereum.Call {
  get inputs(): RevokeAccessCall__Inputs {
    return new RevokeAccessCall__Inputs(this);
  }

  get outputs(): RevokeAccessCall__Outputs {
    return new RevokeAccessCall__Outputs(this);
  }
}

export class RevokeAccessCall__Inputs {
  _call: RevokeAccessCall;

  constructor(call: RevokeAccessCall) {
    this._call = call;
  }

  get addrToRevoke(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get idx(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RevokeAccessCall__Outputs {
  _call: RevokeAccessCall;

  constructor(call: RevokeAccessCall) {
    this._call = call;
  }
}
